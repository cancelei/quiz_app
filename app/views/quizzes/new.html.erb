<h1 class="text-3xl font-bold"><%= action_name.capitalize %> Quiz</h1>

<%= form_with model: @quiz, local: true do |form| %>
  <div class="mb-4">
    <%= form.label :title, class: "block text-gray-700" %>
    <%= form.text_field :title, class: "w-full border border-gray-300 rounded-md p-2" %>
  </div>

  <div class="mb-4">
    <%= form.label :description, class: "block text-gray-700" %>
    <%= form.text_area :description, class: "w-full border border-gray-300 rounded-md p-2" %>
  </div>

  <div class="mb-4">
    <%= form.label :time_limit, "Time Limit (minutes)", class: "block text-gray-700" %>
    <%= form.number_field :time_limit, class: "w-full border border-gray-300 rounded-md p-2" %>
  </div>

  <h2 class="font-semibold text-2xl mt-6">Questions</h2>
  <div id="questions">
    <%= form.fields_for :questions do |question_form| %>
      <%= render 'question_fields', f: question_form %>
    <% end %>
  </div>
  <%#= link_to 'Add Question', add_question_quizzes_path, class: 'add-question bg-blue-500 text-white px-2 py-1 rounded-md', data: { turbo_action: 'replace', turbo_method: 'post' } %>

  <button type="button" id="add-question" class="add-question bg-blue-500 text-white px-2 py-1 rounded-md mt-4">
    Add Question
  </button>

  <%= form.submit "#{action_name.capitalize} Quiz", class: "bg-blue-500 text-white px-4 py-2 rounded-md" %>
<% end %>

<!-- Hidden template for new questions -->
<template id="question-template">
  <div class="question-fields mb-4" data-controller="question">
    <label class="block text-gray-700" for="quiz_questions_attributes_NEW_INDEX_content">Question</label>
    <textarea class="w-full border border-gray-300 rounded-md p-2" name="quiz[questions_attributes][NEW_INDEX][content]" id="quiz_questions_attributes_NEW_INDEX_content"></textarea>

    <h3 class="font-semibold text-xl mt-2">Answers</h3>
    <div class="answers" id="answers">

      <div class="answer-fields mb-4">
        <label class="block text-gray-700" for="quiz_questions_attributes_NEW_INDEX_answers_attributes_0_content">Answer</label>
        <input class="w-full border border-gray-300 rounded-md p-2" type="text" name="quiz[questions_attributes][NEW_INDEX][answers_attributes][0][content]" id="quiz_questions_attributes_NEW_INDEX_answers_attributes_0_content">
        <input name="quiz[questions_attributes][NEW_INDEX][answers_attributes][0][correct]" type="hidden" value="0" autocomplete="off"><input type="checkbox" value="1" name="quiz[questions_attributes][NEW_INDEX][answers_attributes][0][correct]" id="quiz_questions_attributes_NEW_INDEX_answers_attributes_0_correct">
        <label for="quiz_questions_attributes_NEW_INDEX_answers_attributes_0_correct">Correct Answer</label>
      </div>
    </div>
    <button type="button" class="add-answer bg-gray-500 text-white px-2 py-1 rounded-md mt-2">Add Answer</button>
  </div>
</template>

<script type="text/javascript" charset="utf-8">
    document.addEventListener("turbo:load", () => {
        const questionsContainer = document.getElementById("questions");
        const questionTemplate = document.getElementById("question-template").innerHTML;
        let questionIndex = document.querySelectorAll("#questions .question-fields").length;

        // Function to add a new question
        document.getElementById("add-question").addEventListener("click", () => {
            let newQuestionHTML = questionTemplate.replaceAll(/NEW_INDEX/g, questionIndex);
            questionsContainer.insertAdjacentHTML("beforeend", newQuestionHTML);
            questionIndex++;
        });

        // Event delegation to handle adding answers within dynamically added questions
        questionsContainer.addEventListener("click", (event) => {
            if (event.target.classList.contains("add-answer")) {
                const questionDiv = event.target.closest(".question-fields");
                const answersContainer = questionDiv.querySelector(".answers");
                const answerIndex = answersContainer.querySelectorAll("input[type='text']").length;

                // Add new answer input fields
                const answerHTML = `
                  <div class="mt-2">
                    <input type="checkbox"
                           name="quiz[questions_attributes][${questionIndex - 1}][answers_attributes][${answerIndex}][correct]" />
                    <input type="text"
                           name="quiz[questions_attributes][${questionIndex - 1}][answers_attributes][${answerIndex}][content]"
                           class="w-full border border-gray-300 rounded-md p-2"
                           placeholder="Enter answer content" />
                  </div>`;
                answersContainer.insertAdjacentHTML("beforeend", answerHTML);
            }
        });
    });
</script>